Microsoft (R) Macro Assembler Version 14.29.30141.0	    12/22/22 08:30:14
..\GVS-2022\out.asm					     Page 1 - 1


				.586
				.model flat, stdcall
				includelib kernel32.lib
				includelib libucrt.lib
				includelib ..\Debug\GVS-2022Libs.lib
				SetConsoleTitleA PROTO : DWORD
				GetStdHandle PROTO:DWORD
				WriteConsoleA PROTO : DWORD, : DWORD, : DWORD, : DWORD, : DWORD
				printconsole PROTO : DWORD, : DWORD
				SetConsoleOutputCP PROTO : DWORD

				SetConsoleCP PROTO : DWORD

				ExitProcess PROTO:DWORD


				.stack 4096

				EXTRN module: proc
				EXTRN raiser: proc
 00000000			.const
 = 0000000A			endl equ 0ah
 00000000 0A 00			str_endl byte endl,0
 00000002 00000000			L1 SDWORD 0
 00000006 00000001			L2 SDWORD 1
 0000000A 00000002			L3 SDWORD 2
 0000000E 68 65 6C 6C 6F		L4 BYTE "hello", 0
	   00
 00000014 = 00000006		HW0 = ($ - L4)

 00000014 66 00				L5 BYTE "f", 0
 00000016 = 00000002		HW1 = ($ - L5)

 00000016 00000005			L6 SDWORD 5
 0000001A 00000004			L7 SDWORD 4
 0000001E 0000009A			L8 SDWORD 154

 00000000			.data
 00000000  00000100 [			buffer BYTE 256 dup(0)
	    00
	   ]
 00000100 00000000			messageSize dword ?
 00000104 47 56 53 2D 32		consoleTitle BYTE 'GVS-2022'
	   30 32 32
 0000010C  00000028 [			result BYTE 40 dup(0)
	    00
	   ]
 00000134 57 6F 72 6B 69		func_work BYTE 'Working functions='
	   6E 67 20 66 75
	   6E 63 74 69 6F
	   6E 73 3D
 00000146 57 6F 72 6B 69		strsym_work BYTE 'Working symbol/string'
	   6E 67 20 73 79
	   6D 62 6F 6C 2F
	   73 74 72 69 6E
	   67
 0000015B 57 6F 72 6B 69		int_work BYTE 'Working integer='
	   6E 67 20 69 6E
	   74 65 67 65 72
	   3D
 0000016B 00000000			consolehandle dword 0h
 0000016F 00000000			sumz SDWORD 0
 00000173 00000000			Startd SDWORD 0
 00000177 00000000			Startx SDWORD 0
 0000017B 00000000			Startio SDWORD 0
 0000017F 00000000			Startstr DWORD ?
 00000183 00000000			Startch DWORD ?
 00000187 00000000			Starty SDWORD 0
 0000018B 00000000			Startz SDWORD 0
 0000018F 00000000			Startk SDWORD 0
 00000193 00000000			Startv SDWORD 0
 00000197 00000000			Startalt SDWORD 0

 00000000			.code

 00000000			sum PROC suma : SDWORD, sumb : SDWORD
 00000003  FF 75 08			push suma
 00000006  FF 75 0C			push sumb
 00000009  58				pop eax
 0000000A  5B				pop ebx
 0000000B  03 C3			add eax, ebx
 0000000D  50				push eax
 0000000E  8F 05 0000016F R		pop sumz
 00000014  50				push eax

 00000015  EB 00			jmp local0
 00000017			local0:
 00000017  58				pop eax
					ret
 0000001C			sum ENDP

 0000001C			main PROC
 0000001C  FF 35 00000006 R		push L2
 00000022  8F 05 00000173 R		pop Startd
 00000028  FF 35 0000000A R		push L3
 0000002E  8F 05 00000177 R		pop Startx
 00000034  FF 35 00000173 R		push Startd
 0000003A  FF 35 00000177 R		push Startx
 00000040  5A				pop edx
 00000041  5A				pop edx
 00000042  FF 35 00000177 R		push Startx
 00000048  FF 35 00000173 R		push Startd
 0000004E  E8 FFFFFFAD			call sum
 00000053  50				push eax
 00000054  8F 05 0000017B R		pop Startio
 0000005A  A1 0000017B R		mov eax, Startio
 0000005F  3B 05 00000002 R		cmp eax, L1
 00000065  7F 04			jg m0
 00000067  7C 1B			jl m1
 00000069  74 19			je m1
 0000006B			m0:
 0000006B  FF 35 0000017B R		push Startio
 00000071  FF 35 00000006 R		push L2
 00000077  58				pop eax
 00000078  5B				pop ebx
 00000079  03 C3			add eax, ebx
 0000007B  50				push eax
 0000007C  8F 05 0000017B R		pop Startio
 00000082  EB 0C			jmp e0
 00000084			m1:
 00000084  FF 35 00000002 R		push L1
 0000008A  8F 05 0000017B R		pop Startio
 00000090			e0:
 00000090  B8 0000000E R		mov eax, offset L4
 00000095  8F 05 0000017F R		pop Startstr
 0000009B  68 00000104 R	push offset consoleTitle
 000000A0  E8 00000000 E	call SetConsoleTitleA
 000000A5  C7 05 00000100 R	mov messageSize, HW0
	   00000006
 000000AF  6A F5		push -11
 000000B1  E8 00000000 E	call GetStdHandle
 000000B6  A3 0000016B R	mov consolehandle,eax
 000000BB  6A 00		push 0
 000000BD  6A 00		push 0
 000000BF  FF 35 00000100 R	push messageSize
 000000C5  68 0000017F R	push offset Startstr
 000000CA  FF 35 0000016B R	push consolehandle
 000000D0  E8 00000000 E	call WriteConsoleA
 000000D5  B8 00000014 R		mov eax, offset L5
 000000DA  8F 05 00000183 R		pop Startch
 000000E0  68 00000104 R	push offset consoleTitle
 000000E5  E8 00000000 E	call SetConsoleTitleA
 000000EA  C7 05 00000100 R	mov messageSize, HW1
	   00000002
 000000F4  6A F5		push -11
 000000F6  E8 00000000 E	call GetStdHandle
 000000FB  A3 0000016B R	mov consolehandle,eax
 00000100  6A 00		push 0
 00000102  6A 00		push 0
 00000104  FF 35 00000100 R	push messageSize
 0000010A  68 00000183 R	push offset Startch
 0000010F  FF 35 0000016B R	push consolehandle
 00000115  E8 00000000 E	call WriteConsoleA
				invoke printconsole, offset str_endl, offset consoleTitle 
 00000129  FF 35 0000000A R		push L3
 0000012F  8F 05 00000187 R		pop Starty
 00000135  FF 35 00000187 R		push Starty
 0000013B  5A				pop edx
 0000013C  FF 35 00000187 R		push Starty
 00000142  E8 00000000 E		call module
 00000147  50				push eax
 00000148  8F 05 0000018B R		pop Startz
 0000014E  FF 35 0000018B R		push Startz
 00000154  68 0000010C R		push offset result
 00000159  E8 0000016C			call int_to_char
					invoke printconsole,offset int_work,offset consoleTitle
				invoke printconsole, offset str_endl, offset consoleTitle 
 0000017C  FF 35 00000016 R		push L6
 00000182  FF 35 0000001A R		push L7
 00000188  5A				pop edx
 00000189  5A				pop edx
 0000018A  FF 35 0000001A R		push L7
 00000190  FF 35 00000016 R		push L6
 00000196  E8 00000000 E		call raiser
 0000019B  50				push eax
 0000019C  8F 05 0000018F R		pop Startk
 000001A2  FF 35 0000018F R		push Startk
 000001A8  68 0000010C R		push offset result
 000001AD  E8 00000118			call int_to_char
					invoke printconsole,offset int_work,offset consoleTitle
				invoke printconsole, offset str_endl, offset consoleTitle 
 000001D0  FF 35 0000001E R		push L8
 000001D6  8F 05 00000193 R		pop Startv
 000001DC  FF 35 0000018B R		push Startz
 000001E2  FF 35 0000018F R		push Startk
 000001E8  5B				pop ebx
 000001E9  58				pop eax
 000001EA  23 C3			and eax, ebx
 000001EC  52				push edx
 000001ED  8F 05 00000197 R		pop Startalt
 000001F3  FF 35 00000197 R		push Startalt
 000001F9  68 0000010C R		push offset result
 000001FE  E8 000000C7			call int_to_char
					invoke printconsole,offset int_work,offset consoleTitle
				invoke printconsole, offset str_endl, offset consoleTitle 
 00000221  A1 0000018B R		mov eax, Startz
 00000226  3B 05 00000006 R		cmp eax, L2
 0000022C  7F 02			jg cycle0
 0000022E  EB 43			jmp cyclenext0
 00000230			cycle0:
 00000230  FF 35 0000018B R		push Startz
 00000236  FF 35 00000006 R		push L2
 0000023C  5B				pop ebx
 0000023D  58				pop eax
 0000023E  2B C3			sub eax, ebx
 00000240  50				push eax
 00000241  8F 05 0000018B R		pop Startz
 00000247  FF 35 0000018B R		push Startz
 0000024D  68 0000010C R		push offset result
 00000252  E8 00000073			call int_to_char
					invoke printconsole,offset int_work,offset consoleTitle
 00000266  A1 0000018B R		mov eax, Startz
 0000026B  3B 05 00000006 R		cmp eax, L2
 00000271  7F BD			jg cycle0
 00000273			cyclenext0:
				invoke printconsole, offset str_endl, offset consoleTitle 
 00000282  50				push eax

 00000283  EB 00				jmp theend
 00000285			theend:
 00000285  E8 00000000 E		call ExitProcess
 0000028A			main ENDP

 0000028A			printconsole proc uses eax ebx ecx edi esi,pstr :dword,ptitle :dword
 00000292  FF 75 0C		push ptitle
 00000295  E8 00000000 E	call SetConsoleTitleA ;
 0000029A  8B 75 08		mov esi,pstr
 0000029D  6A F5		push -11 ; -11 - handle для стандартного вывода
 0000029F  E8 00000000 E	call GetStdHandle ; получить handle -> в eax
 000002A4  8B 75 08		mov esi, pstr ; подсчет количества символов
 000002A7  BF FFFFFFFF		mov edi, -1 ; до 0-символа
 000002AC			count:
 000002AC  47			inc edi ;
 000002AD  80 3C 3E 00		cmp byte ptr [esi + edi], 0 ; 
 000002B1  75 F9		jne count ;
 000002B3  6A 00		push 0 ; можно 0 (резерв)
 000002B5  6A 00		push 0 ; можно 0
 000002B7  57			push edi ; количество байт
 000002B8  FF 75 08		push pstr ; адрес выводимой строки
 000002BB  50			push eax ; handle для вывода (eax)
 000002BC  E8 00000000 E	call WriteConsoleA ; вывести в консоль
				ret ; вывести в консоль
 000002CA			printconsole ENDP; ----------------преобразование числа в строку--------------------------
 000002CA			int_to_char PROC uses eax ebx ecx edi esi,pstr : dword,intfield : sdword
 000002D2  8B 7D 08		mov edi, pstr
 000002D5  BE 00000000		mov esi, 0
 000002DA  8B 45 0C		mov eax, intfield
 000002DD  99			cdq
 000002DE  BB 0000000A		mov ebx,10
 000002E3  F7 FB		idiv ebx
 000002E5  A9 80000000		test eax, 80000000h
 000002EA  74 09		jz plus
 000002EC  F7 D8		neg eax
 000002EE  F7 DA		neg edx
 000002F0  B1 2D		mov cl,'-'
 000002F2  88 0F		mov[edi],cl
 000002F4  47			inc edi
 000002F5			plus:
 000002F5  66| 52		push dx
 000002F7  46			inc esi
 000002F8  85 C0		test eax,eax;
 000002FA  74 05		jz fin
 000002FC  99			cdq
 000002FD  F7 FB		idiv ebx
 000002FF  EB F4		jmp plus
 00000301			fin:
 00000301  8B CE		mov ecx,esi
 00000303			write:
 00000303  66| 5B		pop bx
 00000305  80 C3 30		add bl, '0'
 00000308  88 1F		mov[edi], bl
 0000030A  47			inc edi
 0000030B  E2 F6		loop write
				ret
 00000316			int_to_char ENDP
				end main
Microsoft (R) Macro Assembler Version 14.29.30141.0	    12/22/22 08:30:14
..\GVS-2022\out.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000022 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000019B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000316 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
int_to_char  . . . . . . . . . .	P Near	 000002CA _TEXT	Length= 0000004C Public STDCALL
  pstr . . . . . . . . . . . . .	DWord	 bp + 00000008
  intfield . . . . . . . . . . .	DWord	 bp + 0000000C
  plus . . . . . . . . . . . . .	L Near	 000002F5 _TEXT	
  fin  . . . . . . . . . . . . .	L Near	 00000301 _TEXT	
  write  . . . . . . . . . . . .	L Near	 00000303 _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000001C _TEXT	Length= 0000026E Public STDCALL
  m0 . . . . . . . . . . . . . .	L Near	 0000006B _TEXT	
  m1 . . . . . . . . . . . . . .	L Near	 00000084 _TEXT	
  e0 . . . . . . . . . . . . . .	L Near	 00000090 _TEXT	
  cycle0 . . . . . . . . . . . .	L Near	 00000230 _TEXT	
  cyclenext0 . . . . . . . . . .	L Near	 00000273 _TEXT	
  theend . . . . . . . . . . . .	L Near	 00000285 _TEXT	
printconsole . . . . . . . . . .	P Near	 0000028A _TEXT	Length= 00000040 Public STDCALL
  pstr . . . . . . . . . . . . .	DWord	 bp + 00000008
  ptitle . . . . . . . . . . . .	DWord	 bp + 0000000C
  count  . . . . . . . . . . . .	L Near	 000002AC _TEXT	
sum  . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001C Public STDCALL
  suma . . . . . . . . . . . . .	DWord	 bp + 00000008
  sumb . . . . . . . . . . . . .	DWord	 bp + 0000000C
  local0 . . . . . . . . . . . .	L Near	 00000017 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
HW0  . . . . . . . . . . . . . .	Number	 00000006h   
HW1  . . . . . . . . . . . . . .	Number	 00000002h   
L1 . . . . . . . . . . . . . . .	DWord	 00000002 CONST	
L2 . . . . . . . . . . . . . . .	DWord	 00000006 CONST	
L3 . . . . . . . . . . . . . . .	DWord	 0000000A CONST	
L4 . . . . . . . . . . . . . . .	Byte	 0000000E CONST	
L5 . . . . . . . . . . . . . . .	Byte	 00000014 CONST	
L6 . . . . . . . . . . . . . . .	DWord	 00000016 CONST	
L7 . . . . . . . . . . . . . . .	DWord	 0000001A CONST	
L8 . . . . . . . . . . . . . . .	DWord	 0000001E CONST	
Startalt . . . . . . . . . . . .	DWord	 00000197 _DATA	
Startch  . . . . . . . . . . . .	DWord	 00000183 _DATA	
Startd . . . . . . . . . . . . .	DWord	 00000173 _DATA	
Startio  . . . . . . . . . . . .	DWord	 0000017B _DATA	
Startk . . . . . . . . . . . . .	DWord	 0000018F _DATA	
Startstr . . . . . . . . . . . .	DWord	 0000017F _DATA	
Startv . . . . . . . . . . . . .	DWord	 00000193 _DATA	
Startx . . . . . . . . . . . . .	DWord	 00000177 _DATA	
Starty . . . . . . . . . . . . .	DWord	 00000187 _DATA	
Startz . . . . . . . . . . . . .	DWord	 0000018B _DATA	
buffer . . . . . . . . . . . . .	Byte	 00000000 _DATA	
consoleTitle . . . . . . . . . .	Byte	 00000104 _DATA	
consolehandle  . . . . . . . . .	DWord	 0000016B _DATA	
endl . . . . . . . . . . . . . .	Number	 0000000Ah   
func_work  . . . . . . . . . . .	Byte	 00000134 _DATA	
int_work . . . . . . . . . . . .	Byte	 0000015B _DATA	
messageSize  . . . . . . . . . .	DWord	 00000100 _DATA	
module . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
raiser . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
result . . . . . . . . . . . . .	Byte	 0000010C _DATA	
str_endl . . . . . . . . . . . .	Byte	 00000000 CONST	
strsym_work  . . . . . . . . . .	Byte	 00000146 _DATA	
sumz . . . . . . . . . . . . . .	DWord	 0000016F _DATA	

	   0 Warnings
	   0 Errors
